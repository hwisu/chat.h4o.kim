var I=Object.defineProperty;var P=(t,e,s)=>e in t?I(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var g=(t,e,s)=>P(t,typeof e!="symbol"?e+"":e,s);import"./components.js";import{H as f}from"./svelte.js";const L={isAuthenticated:!1,status:"Authentication required",method:null,userApiKey:null,sessionToken:null},p=f({...L});function h(t){Object.assign(p,t)}const v={available:[],selected:null,selectedInfo:{name:"whoami",provider:"",contextSize:128e3},isLoading:!1},_=f({...v});function u(t){Object.assign(_,t)}const x=f([]);function m(t){x.push(t)}const q={isLoading:!1,currentView:"chat",error:null,showSystemMessage:!0},M=f({...q});function l(t){M.error=t}function j(){M.error=null}function n(t){M.isLoading=t}const T=$state({available:[],selected:null,selectedInfo:{name:"ü§ñ General Assistant",description:"General purpose AI assistant"},isLoading:!1}),z=$state({usage:"--",maxSize:128e3,currentSize:0,percentage:0,lastTokenUsage:null}),U=T;function d(t){Object.assign(T,t)}function b(t){Object.assign(z,t)}class C{constructor(){this.userApiKey=null,this.sessionToken=null,this.restoreAuth()}prepareHeaders(e={}){const s={"Content-Type":"application/json",...e};return this.userApiKey&&(s["X-User-API-Key"]=this.userApiKey),this.sessionToken&&(s["X-Session-Token"]=this.sessionToken),console.log("API Headers:",{hasUserApiKey:!!this.userApiKey,hasSessionToken:!!this.sessionToken,sessionToken:this.sessionToken?"exists":"missing"}),s}async request(e,s={}){const{method:o="GET",body:a=null,headers:r={}}=s,k={method:o,headers:this.prepareHeaders(r)};a&&o!=="GET"&&(k.body=typeof a=="string"?a:JSON.stringify(a));try{const c=await fetch(e,k);return{response:c,ok:c.ok,status:c.status}}catch(c){throw c}}async checkAuthStatus(){const{response:e,ok:s,status:o}=await this.request("/api/auth-status");return s?{success:!0,data:await e.json()}:{success:!1,status:o}}async login(e){const{response:s,ok:o,status:a}=await this.request("/api/login",{method:"POST",body:{password:e}});if(o){const r=await s.json();return r.login_success&&r.session_token?(this.sessionToken=r.session_token,sessionStorage.setItem("session_token",r.session_token),console.log("Login success - token saved:",{token:r.session_token?"received":"missing",stored:sessionStorage.getItem("session_token")?"stored":"not stored"}),{success:!0,data:{...r,success:!0,message:r.response}}):r.login_failed?{success:!1,error:r.response||"Login failed",status:a}:{success:!1,error:"Unknown login response",status:a}}else{const r=await s.json().catch(()=>({error:`HTTP ${a}`}));return{success:!1,error:r.response||r.error||`HTTP ${a}`,status:a}}}async setApiKey(e){const{response:s,ok:o,status:a}=await this.request("/api/set-api-key",{method:"POST",body:{apiKey:e}});if(o){const r=await s.json();return r.success&&(this.userApiKey=e,localStorage.setItem("user_api_key",e)),{success:!0,data:r}}else return{success:!1,error:(await s.json().catch(()=>({error:`HTTP ${a}`}))).error||`HTTP ${a}`,status:a}}async getModels(){const{response:e,ok:s,status:o}=await this.request("/api/models");return o===401?{success:!1,error:"Authentication required",status:401}:s?{success:!0,models:(await e.json()).models}:{success:!1,error:`HTTP ${o}`,status:o}}async setModel(e){const{response:s,ok:o,status:a}=await this.request("/api/set-model",{method:"POST",body:{model:e}});if(o){const r=await s.json();return{success:r.success,data:r}}else return{success:!1,error:`HTTP ${a}`,status:a}}async getRoles(){const{response:e,ok:s,status:o}=await this.request("/api/roles");return o===401?{success:!1,error:"Authentication required",status:401}:s?{success:!0,roles:(await e.json()).roles}:{success:!1,error:`HTTP ${o}`,status:o}}async setRole(e){const{response:s,ok:o,status:a}=await this.request("/api/set-role",{method:"POST",body:{role:e}});if(o){const r=await s.json();return{success:r.success,data:r}}else return{success:!1,error:`HTTP ${a}`,status:a}}async sendMessage(e){const{response:s,ok:o,status:a}=await this.request("/api/chat",{method:"POST",body:{message:e}});if(a===401)return{success:!1,error:"Authentication required",status:401};if(o)return{success:!0,data:await s.json()};{let r;try{r=await s.json()}catch{r={error:`HTTP ${a}`}}return{success:!1,error:r.response||r.error||`HTTP ${a}`,status:a}}}async getContextInfo(){const{response:e,ok:s,status:o}=await this.request("/api/context");return s?{success:!0,data:await e.json()}:{success:!1,error:`HTTP ${o}`,status:o}}restoreAuth(){this.sessionToken=sessionStorage.getItem("session_token"),this.userApiKey=localStorage.getItem("user_api_key"),console.log("Auth restored:",{sessionToken:this.sessionToken?"restored":"not found",userApiKey:this.userApiKey?"restored":"not found"})}logout(){this.sessionToken=null,this.userApiKey=null,sessionStorage.removeItem("session_token"),localStorage.removeItem("user_api_key")}}const i=new C;async function y(){try{n(!0),i.restoreAuth(),await R();const t=await i.checkAuthStatus();t.success&&t.data.authenticated&&await Promise.all([w(),S(),A()]),$(),console.log("‚úÖ App initialization completed")}catch(t){console.error("App initialization failed:",t),l("Failed to initialize app: "+t.message)}finally{n(!1)}}async function R(){try{const t=await i.checkAuthStatus();if(t.success){const{authenticated:e,method:s,contextUsage:o}=t.data;return h({isAuthenticated:e,status:e?"Authenticated":"Authentication required",method:s||null}),o&&b({usage:o}),e}else return h({isAuthenticated:!1,status:"Authentication required",method:null}),!1}catch(t){return console.error("Auth status check failed:",t),h({isAuthenticated:!1,status:"Connection error",method:null}),!1}}async function w(){try{u({isLoading:!0});const t=await i.getModels();if(t.success){u({available:t.models,isLoading:!1});const e=t.models.find(s=>s.selected)||t.models[0];e&&u({selected:e.id,selectedInfo:{name:e.name,provider:e.provider,contextSize:e.context_length||128e3}})}else console.error("Failed to load models:",t.error),u({isLoading:!1})}catch(t){console.error("Error loading models:",t),u({isLoading:!1})}}async function S(){try{d({isLoading:!0});const t=await i.getRoles();if(t.success){d({available:t.roles,isLoading:!1});const e=t.roles.find(s=>s.selected)||t.roles[0];e&&d({selected:e.id,selectedInfo:{name:e.name,description:e.description||""}})}else console.error("Failed to load roles:",t.error),d({isLoading:!1})}catch(t){console.error("Error loading roles:",t),d({isLoading:!1})}}async function A(){try{const t=await i.getContextInfo();if(t.success){const{usage:e,maxSize:s,currentSize:o}=t.data;b({usage:e,maxSize:s||128e3,currentSize:o||0,percentage:o&&s?o/s*100:0})}}catch(t){console.error("Error loading context info:",t)}}function $(){H()}function H(){return`[SYSTEM] ${new Date().toLocaleString()}

üåü Choose access method:

üîê Server Login: /login <password>
üîë Personal Key: /set-api-key <key>

üí° Choose ONE option`}async function F(t){try{n(!0);const e=await i.login(t);return e.success?(h({isAuthenticated:!0,status:"Authenticated via server",method:"server",sessionToken:e.data.token}),await Promise.all([w(),S(),A()]),{success:!0}):(l(e.error||"Login failed"),{success:!1,error:e.error})}catch(e){return console.error("Login error:",e),l("Login failed: "+e.message),{success:!1,error:e.message}}finally{n(!1)}}async function W(t){try{n(!0);const e=await i.setApiKey(t);return e.success?(h({isAuthenticated:!0,status:"Authenticated via API key",method:"api-key",userApiKey:t}),await Promise.all([w(),S(),A()]),{success:!0}):(l(e.error||"API key validation failed"),{success:!1,error:e.error})}catch(e){return console.error("API key setup error:",e),l("API key setup failed: "+e.message),{success:!1,error:e.message}}finally{n(!1)}}class E{async sendMessage(e){if(e.trim())try{this.addUserMessage(e),n(!0),e.startsWith("/login ")?await this.handleLoginCommand(e):await this.handleChatMessage(e)}catch(s){console.error("Error sending message:",s),this.addSystemMessage(`Failed to send message: ${s instanceof Error?s.message:"Unknown error"}`,"error")}finally{n(!1)}}addUserMessage(e){const s={id:this.generateMessageId(),role:"user",content:e,timestamp:new Date};m(s)}addSystemMessage(e,s="error"){const o={id:this.generateMessageId(),role:"system",content:e,timestamp:new Date};m(o)}addAssistantMessage(e,s,o){const a={id:this.generateMessageId(),role:"assistant",content:e,timestamp:new Date,tokens:o==null?void 0:o.total_tokens};m(a)}async handleLoginCommand(e){const s=e.substring(7).trim(),o=await i.login(s);o.success?(this.addSystemMessage(o.data.message||"Login successful","success"),await y()):this.addSystemMessage(o.error||"Login failed","error")}async handleChatMessage(e){const s=await i.sendMessage(e);s.success&&s.data?s.data.response&&(console.log("Token usage from API:",s.data.usage),this.addAssistantMessage(s.data.response,s.data.model,s.data.usage)):this.addSystemMessage(s.error||"Failed to send message","error")}generateMessageId(){return`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}}const N=new E;class K{constructor(){g(this,"modalState",{showAuthModal:!1,showModelModal:!1,showRoleModal:!1});g(this,"modalSubscribers",[]);this.initializeGlobalAPI()}subscribeToModals(e){return this.modalSubscribers.push(e),e(this.modalState),()=>{const s=this.modalSubscribers.indexOf(e);s>-1&&this.modalSubscribers.splice(s,1)}}notifyModalSubscribers(){this.modalSubscribers.forEach(e=>e(this.modalState))}showAuthModal(){this.modalState.showAuthModal=!0,this.notifyModalSubscribers()}hideAuthModal(){this.modalState.showAuthModal=!1,this.notifyModalSubscribers()}showModelModal(){this.modalState.showModelModal=!0,this.notifyModalSubscribers()}hideModelModal(){this.modalState.showModelModal=!1,this.notifyModalSubscribers()}showRoleModal(){this.modalState.showRoleModal=!0,this.notifyModalSubscribers()}hideRoleModal(){this.modalState.showRoleModal=!1,this.notifyModalSubscribers()}async handleModelClick(){p.isAuthenticated?this.showModelModal():this.showAuthModal()}async handleRoleClick(){p.isAuthenticated?this.showRoleModal():this.showAuthModal()}async handleAuthSuccess(){this.hideAuthModal(),j();try{await y()}catch(e){l(e instanceof Error?e.message:"Initialization failed")}}handleModelSelect(){this.hideModelModal()}handleRoleSelect(){this.hideRoleModal()}handleScrollToBottom(){const e=document.querySelector(".chat-area");e&&(e.scrollTop=e.scrollHeight)}initializeGlobalAPI(){window.svelteApp={showAuthModal:()=>this.showAuthModal(),showModelModal:()=>this.showModelModal(),showRoleModal:()=>this.showRoleModal(),sendMessage:e=>{console.log("Global sendMessage called:",e)}}}async initialize(){try{await y()}catch(e){l(e instanceof Error?e.message:"App initialization failed")}}}const X=new K;export{p as a,x as b,N as c,j as d,i as e,u as f,d as g,X as h,F as l,_ as m,U as r,W as s,M as u};
